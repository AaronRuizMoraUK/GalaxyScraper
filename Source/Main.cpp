//- ESTA QUITADO DEL PROYECTO 'NDEBUG' PARA TENER ASSERTS EN RELEASE
//- ACORDARSE DE VOLVER A PONER 'NDEBUG' EN PROPIEDADES DEL PROYECTO EN RELEASE EN C/C++->PREPROCESOR->DEFINITIONS
//- ACORDARSE DE QUITAR TODOS LOS Global::print
//- ACORDARSE DE QUITAR TODOS LOS Global::DrawXXX
//- ACORDARSE DE QUITAR TODOS LOS //////OutputDebugString
//  ACORDARSE DE QUITAR TODOS LOS EnableXXXColor() de la IA Y TODOS LOS QUE RECORREN EL VECTOR DE MATERIALES PARA CAMBIAR EL COLOR
//- ACORDARSE DE QUITAR EL Global::camera->activate(); DE LOS RENDERS
//  ACORDARSE DE QUITAR TODOS LOS timeGetTime DE LAS ESTADISTICAS
//- ACORDARSE DE QUITAR TODAS LAS COSAS DEL MsgProc Y TODAS LAS COSAS DE DEBUG
//- ACORDARSE DE QUITAR LOS PRINT DE LOS SCRIPTS (Incluido con los //////OutputDebugString)
//  ACORDARSE DE VOLVER A PONER PROTECTED LAS VARIABLES DE IURANUSPLANETLOGIC (No hace falta)
//- ACORDARSE DE MIRAR LAS VARIABLES GLOBALES QUE SEAN PARA DEBUGEAR Y HACER QUE NO FUNCIONEN (Incluido con los MsgProc)
//X ACORDARSE DE QUITAR EL RECORRIDO AL VECTOR DE FOOLISHEDS EN killEatenEnemies DE IuranusEnemyManager
//X ACORDARSE DE QUITAR EL DEBUG QUE HAY AL COGER LOS DATOS DE POSITION Y CENTER EN checkObjectInsideVolume de LogicSphereVolume
//- ACORDARSE DE QUITAR LOS CASOS PARTICULARES QUE NO QUERIAMOS QUE SALTARA ERROR EN LUA EN execute de LuaVM.cpp (y en el .h el default a false)
//- ACORDARSE DE QUITAR TODOS LOS MessageBox
//- ACORDARSE DE QUITAR LOS GAMESTATES DE TEST EN EL VECTOR gameStates DE IGAMESTATE y su declaración 
//- ACORDARSE DE QUITAR EN EL UPDATE DE LOGICMANAGER linea 31 el test_boiler_planet_state
//- ACORDARSE DE QUITAR EL RENDER DEL STATIC_COLLISION_BOILER_MANAGER
//- REPASAR LOS RELOAD SHADER
//- ACORDARSE DE QUITAR EL BOLEANO DIE EN EL UPDATE DE BOILERSTAE
//- ACORDARSE DE QUITAR LOS isPushed

#include "Game/Game.h"

/**
* The application's entry point
*
* @param HINSTANCE HINSTANCE LPSTR INT Application's entry parameters
* @return INT Return value of the application
*/
INT WINAPI WinMain( HINSTANCE hInst, HINSTANCE, LPSTR, INT )
{
	// Create game
	Game game;

	// Initiate game
	if( game.initiate() ) {
		// Run game
		game.run();
	}
	else {
		assert( !"Not initiated" );
		return 0;
	}

	// Clean game
	game.clean();

	return 0;
}
